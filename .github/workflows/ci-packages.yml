name: CI-packages

on:
  push:
    branches:
      - dev
      - main
    paths:
      - "packages/**"
      - "package.json"
      - "tsconfig.base.json"
      - "yarn.lock"
      - ".yarnrc.yml"
      - ".eslintrc.base.json"
      - ".eslintignore"
      - ".github/workflows/**"

  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - "packages/**"
      - "package.json"
      - "tsconfig.base.json"
      - "yarn.lock"
      - ".yarnrc.yml"
      - ".eslintrc.base.json"
      - ".eslintignore"
      - ".github/workflows/**"
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      # While setup-node action has a cache option since v2.2.0 for yarn which makes
      # config shorter. It seems to invalidate the cache whenever yarn.lock changes,
      # and so yarn has to download again deps (rather than reusing / managing the
      # .yarn/cache/*.zip that it already have)
      - name: Restore yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-os-${{ runner.os }}-node-${{ env.node-version }}-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-os-${{ runner.os }}-node-${{ env.node-version }}-
            yarn-cache-folder-os-${{ runner.os }}-

      - name: Install dependencies
        run: |
          yarn install --immutable

      - name: Check for duplicate dependencies in lock file
        run: |
          yarn dedupe --check

      - name: Typecheck
        run: |
          yarn packages:typecheck

      - name: Linter
        run: |
          yarn packages:lint

      - name: Build
        run: |
          yarn packages:build



