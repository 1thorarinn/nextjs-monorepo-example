version: "3.8"

services:
  #
  # BUILTKIT_PROGRESS=plain DOCKER_BUILDKIT=1 docker-compose build --force-rm --progress=plain workspaces-full-install
  #
  workspaces-full-install:
    profiles:
      - donotstart
    stdin_open: true
    build:
      context: ./
      dockerfile: Dockerfile
      target: workspaces-full-install

  builder:
    profiles:
      - donotstart
    container_name: nextjs-monorepo-web-app_dev-build
    stdin_open: true
    build:
      context: ./
      dockerfile: Dockerfile
      target: builder

  web-app-dev:
    # Service must be started explicitly with docker-compose up web-app
    profiles:
      - donotstart
    container_name: nextjs-monorepo-web-app_dev
    build:
      context: ./
      dockerfile: Dockerfile
      target: web-app-dev
    stdin_open: true
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
    volumes:
      - .:/app/
      # yarn is  yarn
      - yarn_cache_exclude:/app/.yarn/cache
      # the volumes below prevents our host system's node_modules to be mounted
      - nm_exclude_root:/app/node_modules/
      #- nm_exclude_web-app:/app/apps/web-app/node_modules/
      #- nm_exclude_blog-app:/app/apps/blog-app/node_modules/
      #- nm_exclude_core-lib:/app/packages/core-lib/node_modules/
      #- nm_exclude_db-main-prisma:/app/packages/db-main-prisma/node_modules/
      #- nm_exclude_ui-lib:/app/packages/ui-lib/node_modules/
      # the volume below prevents our host system's build to be mounted
      - build_excl_web-app:/app/apps/web-app/.next/
    depends_on:
      - main-db

  main-db:
    image: postgres:13-alpine
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
    environment:
      - POSTGRES_DB=maindb
      - POSTGRES_PASSWORD=!ChangeMe!
      - POSTGRES_USER=nextjs
    volumes:
      - db_data:/var/lib/postgresql/data:rw
      # you may use a bind-mounted host directory instead,
      # so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw

volumes:
  yarn_cache_exclude:
  nm_exclude_root:
  nm_exclude_web-app:
  nm_exclude_blog-app:
  nm_exclude_core-lib:
  nm_exclude_db-main-prisma:
  nm_exclude_ui-lib:
  build_excl_web-app:
  db_data:
